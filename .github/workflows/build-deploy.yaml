on: 
    push:
        branches: 
            - main
            - deploy/add_script_deployment

jobs:
    build-image:
        runs-on: ubuntu-latest
        env: 
            DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        steps:
            - name: Checkout Develop
              uses: actions/checkout@v3

            - name: DockerHub Login
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Infisical Login && Push Image
              run: export INFISICAL_TOKEN=$(infisical login --domain=${{secrets.INFISICAL_URL}} --method=universal-auth --client-id=${{secrets.INFISICAL_CLIENT_ID}} --client-secret=${{secrets.INFISICAL_CLIENT_SECRET}} --silent --plain) && infisical run --env=prod --token=${INFISICAL_TOKEN} --domain=${{secrets.INFISICAL_URL}} --projectId=${{secrets.INFISICAL_PROJECT_ID}} --path=/glam-client --watch -- docker compose build glam-client && docker compose push

    client-deploy:
        runs-on: arisa-server
        needs: build-image
        env: 
            DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        steps:
          - name: Checkout Develop
            uses: actions/checkout@v3
          - name: DockerHub Login
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}
              
          - name: Clean Container, Image And Prepare For Deploy
            run: docker compose -f docker-compose.prod.yaml -p glam-client down --rmi all -v

          - name: Docker Pull Image For Deploy
            run: docker compose -f docker-compose.prod.yaml pull glam-client
            
          - name: Infisical Login && Deploy Client
            run: export INFISICAL_TOKEN=$(infisical login --domain=${{secrets.INFISICAL_URL}} --method=universal-auth --client-id=${{secrets.INFISICAL_CLIENT_ID}} --client-secret=${{secrets.INFISICAL_CLIENT_SECRET}} --silent --plain) && infisical run --env=prod --token=${INFISICAL_TOKEN} --domain=${{secrets.INFISICAL_URL}} --projectId=${{secrets.INFISICAL_PROJECT_ID}} --path=/glam-client --watch -- docker compose -f docker-compose.prod.yaml -p glam-client up -d